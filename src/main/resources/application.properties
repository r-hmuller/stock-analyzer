# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/stocks
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Miscellaneous
populate-database=${POPULATE_DATABASE}
alphavantage.api=${ALPHAVANTAGE_API}
alphavantage.url=${ALPHAVANTAGE_URL}
marketstack.api=${MARKETSTACK_API}
marketstack.url=${MARKETSTACK_URL}
stock.api.provider=${STOCK_API_PROVIDER}
rabbitmq.queue.name=${RABBIT_QUEUE:dailyTradings}
rabbitmq.exchange.name=${RABBIT_EXCHANGE:amqp.stocks}
rabbitmq.routing.key=${RABBIT_ROUTING_KEY:amqp_stocks_routing}